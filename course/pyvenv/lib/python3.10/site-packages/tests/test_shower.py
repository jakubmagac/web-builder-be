from pathlib import Path

from it4kt.shower import ShowerMark
from it4kt.readers import ShowerSlidesReader
from tests.utils import filesystem_find


def test_nothing():
    text = ""
    html = ShowerMark().render(text)
    assert (html.replace("\n", "") == '')


def test_no_slides():
    text = "Only some text"
    html = ShowerMark().render(text)
    assert (html.replace("\n", "") == '<p>Only some text</p>')


def test_single_slide():
    text = "## Slide Title\n\nand content"
    html = ShowerMark().render(text)
    assert (html.replace("\n", "") ==
            '<section class="slide">'
            '<h2>Slide Title</h2>'
            '<p>and content</p>'
            '</section>')


def test_slide_without_header():
    text = "\n---\n\nOnly content"
    html = ShowerMark().render(text)
    assert (html.replace("\n", "") ==
            '<section class="slide">'
            '<p>Only content</p>'
            '</section>')


def test_shout_slide():
    text = "Slide Title\n-----------"
    html = ShowerMark().render(text)
    assert (html.replace("\n", "") ==
            '<section class="slide">'
            '<h2 class="shout">Slide Title</h2>'
            '</section>')


def test_title_slide():
    text = "Title\n====="
    html = ShowerMark().render(text)
    assert (html.replace("\n", "") ==
            '<section class="slide clear title">'
            '<h2>Title</h2>'
            '</section>')


def test_html_slide():
    text = ('<section class="slide black">'
            '<p style="color: white">white on black</p>'
            '</section>\n')
    html = ShowerMark().render(text)
    assert (html == text)


def test_html_in_slide():
    text = ('## Title\n\n<div class="columns two">\n\n'
            'One\n\nTwo\n\n'
            '</div>')
    html = ShowerMark().render(text)
    assert (html.replace("\n", "") ==
            '<section class="slide">'
            '<h2>Title</h2>'
            '<div class="columns two">'
            '<p>One</p><p>Two</p>'
            '</div>'
            '</section>')


def test_math():
    text = " ---\n" \
           r"$f \; x_1 \; x_2 \; \dots \; x_n = e$"
    html = ShowerMark().render(text)
    assert (html.replace("\n", "") ==
            '<section class="slide">'
            r'<p><span class="math">$f \; x_1 \; x_2 \; \dots \; x_n = e$</span></p>'
            '</section>')


def test_metadata(testing_course):
    page = ShowerSlidesReader().read(filesystem_find(Path('slides', 'metadata.md')))
    assert page.title == 'Presentation Name'
    assert page.subtitle == 'Some text'
    assert page.aspect_ratio == '4/3'
    assert page.theme == 'ribbon'


def test_multiple_slides(testing_course):
    page = ShowerSlidesReader().read(filesystem_find(Path('slides', 'example.md')))
    assert page.content.replace("\n", "") == (
        '<section class="slide clear title"><h2>The Title Slide</h2>'
        '<p>Description of your presentation</p></section>'
        '<section class="slide"><h2>Slide Title</h2><p>and content paragraph</p></section>'
        '<section class="slide"><h2>Slide With Bullet Points</h2>'
        '<ul><li>one</li><li>two</li><li>three</li></ul></section>'
        '<section class="slide"><p>Slide without title</p></section>'
        '<section class="slide"><h2 class="shout">Shout Slide</h2></section>'
        '<section class="slide black">  <p style="color: yellow">HTML Slide</p></section>'
        '<section class="slide"><h2>Two columns</h2><div class="columns two">'
        '<p>Markdown and HTML can be combined.</p><p>Just leave empty lines between them.</p>'
        '</div></section>')
