<?xml version="1.0" encoding="UTF-8"?>

<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"
                xmlns:p="http://kpi.fei.tuke.sk/practices"
                xmlns:h="http://www.w3.org/1999/xhtml"
                xmlns:str="http://exslt.org/strings" extension-element-prefixes="str">

    <xsl:import href="localization.xsl"/>
    <xsl:import href="content.xsl"/>

    <xsl:output method="html" omit-xml-declaration="yes"/>

    <xsl:param name="lecturerMode" select="false()"/>
    <xsl:variable name="objectivePrefix">objective-</xsl:variable>

    <!-- =============================== module ============================= -->
    <!-- Main template for module -->
    <xsl:template match="p:module">
        <div class="page-contents">
            <section class="section section--objectives">
                <h2 class="section__header">
                    <xsl:value-of select="$lang.objectives"/>
                </h2>
                <ol class="objectives">
                    <xsl:apply-templates select="p:objective"/>
                </ol>
            </section>

            <xsl:if test="count(p:introduction) > 0">
                <section class="section section--introduction">
                    <h2 class="section__header">
                        <xsl:value-of select="$lang.introduction"/>
                    </h2>

                    <xsl:apply-templates select="p:introduction"/>
                </section>
            </xsl:if>

            <section class="section section--instructions">
                <h2 class="section__header">
                    <xsl:value-of select="$lang.instructions"/>
                </h2>
                <xsl:apply-templates select="p:step"/>
            </section>

            <xsl:if test="count(p:resource) > 0">
                <section class="section section--resources">
                    <h2 class="section__header">
                        <xsl:value-of select="$lang.resources"/>
                    </h2>
                    <ol>
                        <xsl:apply-templates select="p:resource"/>
                    </ol>
                </section>
            </xsl:if>

            <xsl:if test="count(p:additional/p:task) > 0">
                <section class="section section--additional-tasks">
                    <h2 class="section__header">
                        <xsl:value-of select="$lang.additional-tasks"/>
                    </h2>
                    <xsl:apply-templates select="p:additional/p:task"/>
                </section>
            </xsl:if>

            <xsl:if test="count(p:additional/p:resource) > 0">
                <section class="section section--additional-resources">
                    <h2 class="section__header">
                        <xsl:value-of select="$lang.additional-resources"/>
                    </h2>
                    <ol>
                        <xsl:apply-templates select="p:additional/p:resource"/>
                    </ol>
                </section>
            </xsl:if>

            <xsl:if test="count(p:additional/p:quiz) > 0">
                <section class="quiz">
                    <h2 class="quiz__header section-header">
                        <xsl:value-of select="$lang.quiz"/>
                    </h2>
                    <xsl:apply-templates select="p:additional/p:quiz"/>
                </section>
            </xsl:if>
        </div>
    </xsl:template>

    <!-- ======================= objective ===================== -->
    <xsl:template match="p:objective">
        <li class="objective">
            <xsl:attribute name="id">
                <xsl:value-of select="concat($objectivePrefix, @id)"/>
            </xsl:attribute>
            <xsl:apply-templates/>
        </li>
    </xsl:template>

    <!-- ========================== step ========================== -->
    <xsl:template match="p:step">
        <xsl:variable name="objectives" select="//p:objective"/>
        <xsl:variable name="counter" select="count(preceding-sibling::p:step) + 1"/>
        <section class="step" id="step-{$counter}">
            <xsl:attribute name="data-objectives">
                <xsl:variable name="objIds" select="str:tokenize(@objectives, ' ')"/>
                <xsl:for-each select="$objIds">
                    <xsl:variable name="tempId" select="."/>
                    <xsl:value-of select="concat($objectivePrefix,$tempId)"/>
                    <xsl:if test="$tempId != $objIds[last()]">
                        <xsl:text> </xsl:text>
                    </xsl:if>
                </xsl:for-each>
            </xsl:attribute>

            <h3>
                <xsl:attribute name="class">
                    <xsl:text>step__header</xsl:text>
                    <xsl:choose>
                        <xsl:when test="p:title"> step__header--with-title</xsl:when>
                        <xsl:otherwise> step__header--without-title</xsl:otherwise>
                    </xsl:choose>
                </xsl:attribute>
                <span class="step__keyword"><xsl:value-of select="$lang.step"/><xsl:text> </xsl:text></span>
                <span class="step__number"><xsl:value-of select="$counter"/></span>
                <xsl:if test="p:title">
                    <span class="step__colon">: </span>
                    <span class="step__title"><xsl:value-of select="p:title"/></span>
                </xsl:if>
            </h3>
            <xsl:apply-templates/>
        </section>
    </xsl:template>

    <!-- ======================= introduction ======================== -->
    <xsl:template match="p:introduction">
        <xsl:apply-templates/>
    </xsl:template>

    <!-- ======================= resource ======================== -->
    <xsl:template match="p:resource">
        <li>
            <xsl:apply-templates/>
        </li>
    </xsl:template>

    <!-- ============= title, task, comment, link, image, source =============== -->
    <xsl:template match="p:title">
        <!-- skip -->
    </xsl:template>

    <xsl:template match="p:task">
        <div class="task">
            <h4 class="task__header">
                <xsl:choose>
                    <xsl:when test="count(.//p:solution) = 0 or (count(.//p:result) = 0 and count(.//p:solution) = 0)">
                        <xsl:value-of select="$lang.task"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$lang.example"/>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:if test="name(..) = 'step'">
                    <span class="task__number">
                        <xsl:text> </xsl:text>
                        <xsl:value-of select="count(../preceding-sibling::p:step) + 1"/>
                        <xsl:text>.</xsl:text>
                        <xsl:value-of select="count(preceding-sibling::p:task) + 1"/>
                    </span>
                </xsl:if>
                <xsl:if test="name(..) = 'additional'">
                    <span class="task__number">
                        <xsl:text> A.</xsl:text>
                        <xsl:value-of select="count(preceding-sibling::p:task) + 1"/>
                    </span>
                </xsl:if>
            </h4>
            <div class="task__content">
              <xsl:apply-templates/>
            </div>
        </div>
    </xsl:template>

    <!--  integrovane do solution ako:<solution type="result" hidden="true">
    <xsl:template match="p:result">
        <div style="block;overflow: hidden;">
            <div class="result" style="block;display:none;" id="hidden">
                <b>Výsledok:</b>
                <xsl:apply-templates/>
            </div>
            <a style="float:right;" title="Zobraziť výsledok" href="#" onclick="showResult(this);return false;">Zobraziť výsledok</a>
        </div>
    </xsl:template>-->

    <xsl:template match="p:solution|p:result">
        <xsl:choose>
            <xsl:when test="@hidden='true'">
                <div>
                    <div class="result" style="display:none;block">
                        <xsl:choose>
                            <xsl:when test="self::p:result">
                                <b>
                                    <xsl:value-of select="$lang.result"/>:
                                </b>
                            </xsl:when>
                            <xsl:otherwise>
                                <b>
                                    <xsl:value-of select="$lang.solution"/>:
                                </b>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:apply-templates/>
                    </div>
                    <button class="js-show-solution-button">
                        <xsl:choose>
                            <xsl:when test="self::p:result">
                                <xsl:value-of select="$lang.show-result"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="$lang.show-solution"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </button>
                    <button style="display: none" class="js-hide-solution-button">
                        <xsl:choose>
                            <xsl:when test="self::p:result">
                                <xsl:value-of select="$lang.hide-result"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="$lang.hide-solution"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </button>
                </div>
            </xsl:when>
            <xsl:otherwise>
                <div class="solution">
                    <xsl:choose>
                        <xsl:when test="self::p:result">
                            <b>
                                <xsl:value-of select="$lang.result"/>:
                            </b>
                        </xsl:when>
                        <xsl:otherwise>
                            <b>
                                <xsl:value-of select="$lang.solution"/>:
                            </b>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:apply-templates/>
                </div>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>



    <!-- Summary of quiz -->
    <xsl:template match="p:quiz">
        <xsl:choose>
            <xsl:when test="$lecturerMode">
            <!--
                <xsl:variable name="fileName" select="str:tokenize(base-uri(), '/')[last()]"/>
                <xsl:variable name="subjectName" select="str:tokenize(base-uri(), '/')[last()-1]"/>
                <xsl:variable name="moduleNumber" select="str:tokenize($fileName, '\.')[1]"/>
                <div class="quiz" data-quiz-id="{$subjectName}-{$moduleNumber}"></div>
            -->
            </xsl:when>
            <xsl:otherwise>
                <div class="quiz-overview">
                    <strong><xsl:value-of select="p:title" /></strong>
                    <xsl:apply-templates select="p:level"/>
                    <xsl:if test="not(p:level)">
                        <ul>
                            <xsl:apply-templates select="p:question"/>
                        </ul>
                    </xsl:if>
                </div>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template match="p:level">
        <ul>
            <xsl:apply-templates/>
        </ul>
        <hr />
    </xsl:template>
    <xsl:template match="p:question">
        <li><xsl:apply-templates /></li>
    </xsl:template>
    <xsl:template match="p:answer">
        <br /><b>Odpoveď:</b> <kbd><xsl:value-of select="." /></kbd>
    </xsl:template>

</xsl:stylesheet>
