<?xml version="1.0" encoding="UTF-8"?>

<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"
                xmlns:p="http://kpi.fei.tuke.sk/practices"
                xmlns:h="http://www.w3.org/1999/xhtml">

<xsl:import href="localization.xsl"/>
<xsl:output method="html"/>

    <xsl:template match="p:module">
    ---<br/>
    Nadpis: <xsl:value-of select="p:title"/><br/>
    <xsl:if test="p:subtitle">Podnadpis: <xsl:value-of select="p:subtitle"/><br/></xsl:if>
    <xsl:if test="@week">Týždeň: <xsl:value-of select="@week"/><br/></xsl:if>
    <xsl:if test="@publication-week">Týždeň-zverejnenia: <xsl:value-of select="@publication-week"/><br/></xsl:if>
    ---<br/>

        <div class="page-contents">
            <section class="section section--objectives">
                <h2 class="section__header">
                    <xsl:value-of select="$lang.objectives"/>
                </h2>
                <ol class="objectives">
                    <xsl:apply-templates select="//p:objective"/>
                </ol>
            </section>

            <xsl:if test="count(p:introduction) > 0">
                <section class="section section--introduction">
                    <h2 class="section__header">
                        <xsl:value-of select="$lang.introduction"/>
                    </h2>
                    <xsl:apply-templates select="p:introduction"/>
                </section>
            </xsl:if>

            <xsl:if test="count(p:about) > 0">
                <section class="section section--introduction">
                    <h2 class="section__header">
                        <xsl:value-of select="$lang.introduction"/>
                    </h2>
                    <xsl:apply-templates select="p:about"/>
                </section>
            </xsl:if>

            <xsl:apply-templates select="//p:step"/>

            <xsl:if test="count(p:resource) > 0">
                <section id="resources" class="section section--resources">
                    <h2 class="section__header">
                        <xsl:value-of select="$lang.resources"/>
                    </h2>
                    <ol class="resources">
                        <xsl:apply-templates select="p:resource"/>
                    </ol>
                </section>
            </xsl:if>

            <xsl:if test="count(p:additional/p:task) > 0">
                <section class="section section--additional-tasks">
                    <h2 class="section__header">
                        <xsl:value-of select="$lang.additional-tasks"/>
                    </h2>
                    <xsl:apply-templates select="p:additional/p:task"/>
                </section>
            </xsl:if>

            <xsl:if test="count(p:additional-tasks/p:additional-task) > 0">
                <section class="section section--additional-tasks">
                    <h2 class="section__header">
                        <xsl:value-of select="$lang.additional-tasks"/>
                    </h2>
                    <xsl:apply-templates select="p:additional-tasks/p:additional-task"/>
                </section>
            </xsl:if>

            <xsl:if test="count(p:additional/p:resource) > 0">
                <section class="section section--additional-resources">
                    <h2 class="section__header">
                        <xsl:value-of select="$lang.additional-resources"/>
                    </h2>
                    <ol class="resources">
                        <xsl:apply-templates select="p:additional/p:resource"/>
                    </ol>
                </section>
            </xsl:if>

            <xsl:if test="count(p:additional-links/p:additional-link) > 0">
                <section class="section section--additional-resources">
                    <h2 class="section__header">
                        <xsl:value-of select="$lang.additional-resources"/>
                    </h2>
                    <ol class="resources">
                        <xsl:apply-templates select="p:additional-links/p:additional-link"/>
                    </ol>
                </section>
            </xsl:if>
        </div>
    </xsl:template>

    <xsl:template match="p:page">
    ---<br/>
    Nadpis: <xsl:value-of select="p:title"/><br/>
    <xsl:if test="p:subtitle">Podnadpis: <xsl:value-of select="p:subtitle"/><br/></xsl:if>
    <xsl:if test="@week">Týždeň: <xsl:value-of select="@week"/><br/></xsl:if>
    <xsl:if test="@publication-week">Týždeň-zverejnenia: <xsl:value-of select="@publication-week"/><br/></xsl:if>
    ---<br/>

        <div class="page-contents">
            <xsl:if test="p:objective">
              <section class="objectives">
                  <h2 class="objectives__header section-header">
                      <xsl:value-of select="$lang.objectives"/>
                  </h2>
                  <ul class="objective">
                      <xsl:apply-templates select="p:objective"/>
                  </ul>
              </section>
            </xsl:if>

            <xsl:apply-templates select="p:section"/>
        </div>
    </xsl:template>

    <xsl:template match="p:section">
        <section>
            <xsl:choose>
                <xsl:when test="count(ancestor::p:section)=0">

                    <h2><xsl:value-of select="p:title"/></h2>
                </xsl:when>

                <xsl:when test="count(ancestor::p:section)=1">
                    <h3><xsl:value-of select="p:title"/></h3>
                </xsl:when>

                <xsl:when test="count(ancestor::p:section)=2">
                    <h4><xsl:value-of select="p:title"/></h4>
                </xsl:when>
            </xsl:choose>

            <xsl:apply-templates select="*[not(self::p:title)]"/>
        </section>
    </xsl:template>

    <xsl:template match="p:objective">
        <li class="objective">
            {<xsl:value-of select="@id"/>}
            <xsl:apply-templates/>
        </li>
    </xsl:template>

    <xsl:template match="p:step">
        <h2>
            <xsl:value-of select="$lang.step"/>
            <xsl:if test="p:title">: <xsl:value-of select="p:title"/></xsl:if>
            <xsl:if test="@objectives"> {<xsl:value-of select="@objectives"/>}</xsl:if>
        </h2>
        <xsl:apply-templates/>
    </xsl:template>

    <xsl:template match="p:task">
        <xsl:choose>
            <xsl:when test="p:problem">
                <blockquote>
                    <xsl:value-of select="$lang.task"/>:<br/>
                    <xsl:apply-templates select="p:problem"/>
                </blockquote>
                <xsl:apply-templates select="*[not(self::p:problem)]"/>
            </xsl:when>
            <xsl:otherwise>
                <blockquote>
                    <xsl:value-of select="$lang.task"/>:<br/>
                    <xsl:apply-templates mode="task"/>
                </blockquote>
                <xsl:apply-templates select="*[self::p:solution or self::p:result]"/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xsl:template match="p:solution">
        <blockquote>
            <xsl:value-of select="$lang.solution"/><xsl:if test="@hidden='true'">*</xsl:if>:<br/>
            <xsl:apply-templates/>
        </blockquote>
    </xsl:template>

    <xsl:template mode="task" match="p:solution"/>

    <xsl:template match="p:result">
        <blockquote>
            <xsl:value-of select="$lang.result"/><xsl:if test="@hidden='true'">*</xsl:if>:<br/>
            <xsl:apply-templates/>
        </blockquote>
    </xsl:template>

    <xsl:template mode="task" match="p:result"/>

    <xsl:template match="p:additional-task">
        <blockquote>
            <xsl:value-of select="$lang.task"/>:<br/>
            <xsl:apply-templates/>
        </blockquote>
    </xsl:template>

    <xsl:template match="p:comment">
        <blockquote>
            <xsl:value-of select="$lang.note"/>:<br/>
            <xsl:apply-templates/>
        </blockquote>
    </xsl:template>

    <xsl:template match="p:warning">
        <blockquote>
            <xsl:value-of select="$lang.warning"/>:<br/>
            <xsl:apply-templates/>
        </blockquote>
    </xsl:template>

    <xsl:template match="p:alert">
        <blockquote>
            <xsl:value-of select="$lang.warning"/>:<br/>
            <xsl:apply-templates/>
        </blockquote>
    </xsl:template>


    <!--dodany element troubleshooting pre komentare, ktore hovoria o rieseni problemov alebo ladeni-->
    <xsl:template match="p:troubleshooting">
        <div class="admonition admonition--troubleshooting">
            <h4 class="admonition__header">
                <xsl:value-of select="$lang.note"/>
            </h4>
            <div class="admonition__content">
                <xsl:apply-templates/>
            </div>
        </div>
    </xsl:template>

    <xsl:template match="p:title">

    </xsl:template>

    <xsl:template match="p:link">
        <xsl:choose>
            <!--ak to je odkaz na resource ktory ma id, potom to nalinkuj-->
            <xsl:when test="@resourceId">
                <xsl:variable name="resourceId" select="@resourceId"/>
                <xsl:variable name="numLinks" select="count(//p:resource[@id=$resourceId]/p:link)"/>
                <xsl:variable name="linkHref" select="//p:resource[@id=$resourceId]/p:link[position()=1]/@href"/>
                <xsl:variable name="linkText" select="//p:resource[@id=$resourceId]/p:link[position()=1]/text()"/>
                <a><xsl:attribute name="href">
                    <xsl:choose>
                        <xsl:when test="not($numLinks=1)">#resources</xsl:when>
                        <xsl:when test="$linkHref"><xsl:value-of select="$linkHref"/></xsl:when>
                        <xsl:otherwise><xsl:value-of select="$linkText"/></xsl:otherwise>
                    </xsl:choose>
                </xsl:attribute>
                <xsl:if test="$numLinks=1">
                    <xsl:attribute name="target">_blank</xsl:attribute>
                </xsl:if>[<xsl:value-of select="count(/p:module/p:resource[@id=$resourceId]/preceding-sibling::p:resource)+1"/>]</a>
            </xsl:when>
            <!--inak klasicky html link, bez resourceId-->
            <xsl:otherwise>
                <a>
                    <xsl:attribute name="href">
                        <xsl:choose>
                            <xsl:when test="@href"><xsl:value-of select="@href"/></xsl:when><xsl:otherwise><xsl:value-of select="." /></xsl:otherwise>
                        </xsl:choose><xsl:if test="@section">#<xsl:value-of select="@section"/></xsl:if>
                    </xsl:attribute>
                    <xsl:apply-templates/>
                </a>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xsl:template match="p:figure">
        <p>
            <xsl:apply-templates/>
        </p>
    </xsl:template>

    <xsl:template match="p:caption">
    </xsl:template>

    <xsl:template match="p:code">
        <xsl:choose>
            <xsl:when test="@display='block'">
                <xsl:choose>
                    <xsl:when test="@lang">
                        <pre class="code">
                            <code class="language-{@lang}">
```<xsl:value-of select="@lang"/>
<xsl:apply-templates/>```
                            </code>
                        </pre>
                    </xsl:when>
                    <xsl:otherwise>
                        <pre class="code">
                            <code>
```<xsl:apply-templates/>```
                            </code>
                        </pre>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <xsl:choose>
                    <xsl:when test="@lang">
                        <pre class="code">
                            <code class="language-{@lang}">
```<xsl:value-of select="@lang"/><br/>
<xsl:apply-templates/>
```
                            </code>
                        </pre>
                    </xsl:when>
                    <xsl:otherwise>
                        <code>
                            <xsl:apply-templates/>
                        </code>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xsl:template match="p:image">
        <img>
            <xsl:choose>
                <xsl:when test="@scale">
                    <xsl:attribute name="style">width: <xsl:value-of select="@scale"/>; height: <xsl:value-of select="@scale"/></xsl:attribute>
                </xsl:when>
            </xsl:choose>
            <xsl:attribute name="alt">
                <xsl:value-of select="following-sibling::p:caption"/>
            </xsl:attribute>
            <xsl:attribute name="src"><xsl:value-of select="." /></xsl:attribute>
        </img>
    </xsl:template>

    <xsl:template match="p:table">
        <div class="table">
            <table class="table__table">
                <xsl:apply-templates select="p:header" />
                <tbody>
                    <xsl:apply-templates select="p:row" />
                </tbody>
            </table>
        </div>
    </xsl:template>

    <xsl:template match="p:row">
        <tr>
            <xsl:apply-templates/>
        </tr>
    </xsl:template>

    <xsl:template match="p:col">
        <xsl:choose>
            <xsl:when test="count(parent::p:header) > 0">
                <th>
                    <xsl:apply-templates/>
                </th>
            </xsl:when>
            <xsl:when test="count(parent::p:row) > 0">
                <td>
                    <xsl:apply-templates/>
                </td>
            </xsl:when>
            <xsl:otherwise>
                <xsl:apply-templates/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xsl:template match="p:header" name="header">
        <thead>
            <tr>
                <xsl:apply-templates/>
            </tr>
        </thead>
    </xsl:template>

    <xsl:template match="p:resource">
        <li class="resources__item">
            <xsl:apply-templates/>
        </li>
    </xsl:template>

    <xsl:template match="p:additional-link">
        <li class="resources__item">
            <xsl:apply-templates/>
        </li>
    </xsl:template>

    <xsl:template match="p:keyword">
        <strong><xsl:apply-templates/></strong>
    </xsl:template>

    <xsl:template match="p:command">
        <code><xsl:apply-templates/></code>
    </xsl:template>

    <xsl:template match="p:emph">
        <em><xsl:apply-templates/></em>
    </xsl:template>

    <!-- ======================== Lecturer element ======================== -->
    <xsl:template match="p:lecturer">
        <blockquote>
            <xsl:value-of select="$lang.lecturer"/>:<br/>
            <xsl:apply-templates/>
        </blockquote>
    </xsl:template>

    <!-- ===================== copy all html elements ====================== -->
    <xsl:template match="h:*">
        <xsl:element name="{local-name(.)}">
            <xsl:apply-templates select="@*|node()"/>
         </xsl:element>
    </xsl:template>

    <xsl:template match="@*|text()">
        <xsl:copy/>
    </xsl:template>

    <!-- ============ support selected html elements directly ============= -->
    <xsl:template match="p:p | p:ul | p:ol | p:li | p:a | p:em | p:strong">
        <xsl:element name="{local-name(.)}">
            <xsl:apply-templates select="@*|node()"/>
         </xsl:element>
    </xsl:template>

</xsl:stylesheet>

