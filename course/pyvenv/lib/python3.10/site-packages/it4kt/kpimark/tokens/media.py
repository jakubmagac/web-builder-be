import re

from mistletoe.span_token import SpanToken


class MediaToken(SpanToken):
    """
    Media tokens. ("![alt](media: src "title")")

    Attributes:
        media (str): keyword of media service
        src (str): media source.
        title (str): image title (default to empty).
    """

    pattern_alt = r"!\[(?P<alt>.+)?\]"
    pattern_media = r"\((?P<media>[\w\-]+)"
    pattern_src = r"(?P<src>[\w\-\.\/:_=#?&@\+%]+)"
    pattern_src_type = r""
    pattern_title = r"(\"(?P<title>[^\"]+)\")?\)"

    def __init__(self, match):
        self.alt = match.group("alt")
        self.src = match.group("src")

        try:
            self.type = match.group("src_type")[1:]
            self.src += "." + self.type
        except IndexError:
            self.type = ""

        self.media = match.group("media")
        self.title = match.group("title")

    @classmethod
    def find(cls, string):
        pattern = re.compile(
            cls.pattern_alt
            + cls.pattern_media
            + r":\s?"
            + cls.pattern_src
            + cls.pattern_src_type
            + r"[ ]{0,1}"
            + cls.pattern_title,
            re.I,
        )
        return pattern.finditer(string)


class YoutubeToken(MediaToken):
    pattern_media = r"\((?P<media>youtube)"


class VideoToken(MediaToken):
    pattern_media = r"\((?P<media>video)"
    pattern_src_type = r"(?P<src_type>\.\w+)"


class AudioToken(MediaToken):
    pattern_media = r"\((?P<media>audio)"
    pattern_src_type = r"(?P<src_type>\.\w+)"
